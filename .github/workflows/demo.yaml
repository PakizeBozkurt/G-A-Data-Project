---
name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Getbuild artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file  }}"
      - name: Deploy
        run: echo "Deploying..."

#The code starts by specifying the name of the deployment as "Deploy website".

#The on section defines the triggers for this deployment. 
#In this case, it is triggered on a push event to the "main" branch of the repository.

#The code defines a job called "test" which represents a set of tasks to be executed. 
#This job runs on an "ubuntu-latest" machine.

#The steps section contains a list of tasks to be executed within the "test" job.

#The first step is to "Get code" using the actions/checkout@v3 action, which retrieves the source code from the repository.

#The second step is to "Cache dependencies" using the actions/cache@v3 action. 
#This step caches the dependencies of the project, specifically the NPM packages, to speed up future builds.

#The third step is to "Install dependencies" using the npm ci command, 
#which installs the project dependencies based on the package.json file.

#The fourth step is to "Lint code" using the npm run lint command, 
#which performs static code analysis to identify and report coding errors or style violations.

#The fifth step is to "Test code" using the npm run test command, which executes the tests for the project.

#The "build" job is defined next. 
#It specifies that it depends on the successful completion of the "test" job (defined by needs: test).

#The "build" job also runs on an "ubuntu-latest" machine.

#The outputs section defines an output variable called script-file, 
#which will hold the path of a JavaScript file generated during the build process.

#The steps section of the "build" job contains a series of tasks.

#The first step is to "Get code" using the actions/checkout@v3 action.

#The second step is to "Cache dependencies" using the actions/cache@v3 action.

#The third step is to "Install dependencies" using the npm ci command.

#The fourth step is to "Build website" using the npm run build command, 
#which typically compiles and generates the production-ready assets for the website.

#The fifth step is to "Publish JS filename" using the find command to locate the JavaScript file in the dist/assets directory. 
#The path of the file is stored in the script-file output variable.

#The sixth step is to "Upload artifacts" using the actions/upload-artifact@v3 action. 
#It uploads the contents of the dist directory as an artifact for later use.

#The "deploy" job is defined next. 
#It specifies that it depends on the successful completion of the "build" job (defined by needs: build).